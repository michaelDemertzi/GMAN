install.pacakges("RODBC")
install.packages("RODBC")
install.packages("RODBC", type = "source")
install.packages("RODBC", type = "source")
install.packages("RODBC", type = "source")
library(RODBC)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
version
setwd('/Users/gtumuluri/Documents/Projects/Stuff')
##### MELISSA'S TICKET ON PHYTEST: PRD-110 #########
library(dplyr)
library(ggplot2)
library(RMySQL)
library(xlsx)
library(shiny)
dbconn <- dbConnect(MySQL(), group = 'mysql')
query <- dbSendQuery(dbconn,
'SELECT
PS.providerId, P.name, PS.id as paymentId,
PS.accountId,
PS.source, PS.amount, PS.timeProcessed
FROM
paymentsWithState PS
JOIN providers P ON
P.id = PS.providerId
WHERE
P.providerCode LIKE \'PT%\'
AND
P.providerCode LIKE \'PT%\';
')
ptPmts <- dbFetch(query, -1)
dbClearResult(query)
query <- dbSendQuery(dbconn,
'SELECT
PPU.providerId, P.name, PPU.patientUserId,
PU.timeCreated
FROM
providersPatientUsers PPU
JOIN providers P ON
P.id = PPU.providerId
JOIN patientUsers PU ON
PU.id = PPU.patientUserId
WHERE
P.providerCode LIKE \'PT%\';
')
ptPusers <- dbFetch(query, -1)
dbClearResult(query)
query <- dbSendQuery(dbconn,
'SELECT
PS.providerId, P.name, PS.id as paymentId,
PS.accountId, PS.paymentFormId,
PS.source, PS.amount, PS.timeProcessed,
PF.patientUserId, PF.type
FROM
paymentsWithState PS
JOIN providers P ON
P.id = PS.providerId
JOIN paymentForms PF ON
PF.id = PS.paymentFormId
WHERE
P.providerCode LIKE \'PT%\'
AND
PS.paymentState = \'DISBURSED\'
AND
PF.patientUserId IS NOT NULL;
')
ptPuserPmts <- dbFetch(query, -1)
dbClearResult(query)
query <- dbSendQuery(dbconn,
'SELECT
B.id AS billId, B.date AS billDate,
B.amount AS billAmount, B.accountId,
B.dueDate, B.providerId, P.name
FROM
bills B
JOIN providers P ON
P.id = B.providerId
LEFT JOIN printBatches PB ON
PB.id = B.printBatchId
LEFT JOIN printers PR ON
PR.id = PB.printerId
WHERE
P.providerCode LIKE \'PT%\'
AND
PR.printerCode = \'DX\';
')
ptBills <- dbFetch(query, -1)
dbClearResult(query)
dbDisconnect(dbconn)
ptPmts$timeProcessed <- as.Date(ptPmts$timeProcessed)
ptPmts$yearMonth <- format(ptPmts$timeProcessed, '%Y-%m')
ptPusers$timeCreated <- as.Date(ptPusers$timeCreated)
ptPusers$yearMonth <- format(ptPusers$timeCreated, '%Y-%m')
ptPuserPmts$timeProcessed <- as.Date(ptPuserPmts$timeProcessed)
ptPuserPmts$yearMonth <- format(ptPuserPmts$timeProcessed, '%Y-%m')
ptPmtsAgg <- ptPmts %>%
group_by(providerId, name) %>%
summarise(npmts = n(), nweb = sum(source == 'web'),
necash = sum(source == 'ecashiering'),
pweb = round(nweb / npmts * 100, 1),
dpmts = round(sum(amount)),
dweb = round(sum(amount[source == 'web'])),
decash = round(sum(amount[source == 'ecashiering'])),
pdweb = round(dweb / dpmts * 100, 1)) %>%
ungroup() %>%
arrange(desc(npmts))
ptPmtsAgg <- select(ptPmtsAgg, -name, everything())
ptPusersAgg <- ptPusers %>%
group_by(providerId, name) %>%
summarise(npusers = n_distinct(patientUserId)) %>%
ungroup() %>%
arrange(desc(npusers))
ptPuserPmtsAgg <- ptPuserPmts %>%
group_by(providerId, name) %>%
summarise(npuserPmts = n(),
npuserAmount = round(sum(amount))) %>%
ungroup() %>%
arrange(desc(npuserPmts))
ptPuserPmtCount <- ptPuserPmts %>%
group_by(providerId, name, patientUserId) %>%
summarise(npay = n_distinct(paymentId)) %>%
mutate(onePay = (npay == 1)) %>%
group_by(providerId, name) %>%
summarise(percentMultiPay = round((n() - sum(onePay))/n() * 100, 1)) %>%
ungroup() %>%
arrange(desc(percentMultiPay))
ptPuserPmtCount <- select(ptPuserPmtCount, -name, everything())
ptAgg <- inner_join(ptPmtsAgg, ptPusersAgg) %>%
inner_join(ptPuserPmtsAgg) %>%
inner_join(ptPuserPmtCount)
ptAgg <- ungroup(ptAgg)
ptAgg <- select(ptAgg, name, everything())
ptAgg <- select(ptAgg, -providerId)
ptAgg$name <- gsub(',', '', ptAgg$name)
head(ptBills)
nrow(ptBills)
n_distinct(ptBills$accountId)
n_distinct(ptBills$billId)
j <- ptBills %>% group_by(providerId, name, accountId) %>% summarise(nbills = n())
hist(j$nbills)
summary(nbills)
summary(j$nbills)
ptPmtsAgg
ptBillAgg <- ptBills %>%
group_by(providerId, name) %>%
summarise(nbills = n())
ptBillsAgg <- ptBills %>%
group_by(providerId, name) %>%
summarise(nbills = n())
ptBillsAgg
rm(ptBillAgg)
rm(j)
ptAgg <- inner_join(ptBillsAgg, ptPmtsAgg) %>%
inner_join(ptPusersAgg) %>%
inner_join(ptPuserPmtsAgg) %>%
inner_join(ptPuserPmtCount)
ptAgg <- ungroup(ptAgg)
ptAgg <- select(ptAgg, name, everything())
ptAgg <- select(ptAgg, -providerId)
ptAgg$name <- gsub(',', '', ptAgg$name)
head(ptAgg)
nrow(ptBills)
names(ptAgg)
getwd()
setwd('/Users/gtumuluri/Documents/Practice/Shiny')
runApp('phytest')
write.csv(ptAgg, 'PhyTestSummary.csv', row.names = FALSE, quote = FALSE)
ptAgg <- read.csv('PhyTestSummary.csv')
runApp('phytest')
getwd()
runApp('phytest')
runApp('dtable')
?select
runApp('phytest')
?renderDataTable
?DT::renderDataTable
install.packages('DT')
runApp('phytest')
names(ptAgg)
select(ptAgg, name,nbills,npmts,nweb,necash,pweb,dpmts,dweb,decash,pdweb,npusers,npuserPmts,npuserAmount,percentMultiPay)
runApp('phytest')
paste0('name nbills npmts nweb necash pweb dpmts dweb decash pdweb npusers npuserPmts npuserAmount percentMultiPay')
lineData
setwd('/Users/gtumuluri/Documents/Practice/Shiny/proj/GMAN/shinyApp/')
runApp('gman-viz')
install.packages('networkD3')
runApp('gman-viz')
install.packages('rMaps')
install_github('ramnathv/rMaps')
installed.packages('devtools')
library(devtools)
install_github('ramnathv/rMaps')
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
runApp('gman-viz')
source('gman-viz/ui.R')
getwd()
source('ui.R')
list.files()
getwd()
source('gman-viz/ui.R')
setwd('/Users/gtumuluri/Documents/Practice/Shiny/proj/GMAN/shinyApp/gman-viz')
source('ui.R')
names(allBillsStateAgg)
names(allBillsStateTop5)
source('dataRead.R')
states <- read.csv('data/state_table.csv', stringsAsFactors = FALSE)
stateCodes <- data.frame(Contributor.State = c('AL', 'AK', 'AZ', 'AR', 'CA', 'CO',
'CT', 'DE', 'DC', 'FL', 'GA', 'HI',
'ID', 'IL', 'IN', 'IA', 'KS', 'KY',
'LA', 'ME', 'MD', 'MA', 'MI', 'MN',
'MS', 'MO', 'MT', 'NE', 'NV', 'NH',
'NJ', 'NM', 'NY', 'NC', 'ND', 'OH',
'OK', 'OR', 'PA', 'RI', 'SC', 'SD',
'TN', 'TX', 'UT', 'VT', 'VA', 'WA',
'WV', 'WI', 'WY'),
id = c(1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18,
19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45,
46, 47, 48, 49, 50, 51, 53, 54, 55, 56),
stringsAsFactors = FALSE
)
allBillsState <- allBills %>%
filter(!is.na(Contributor.State),
Contributor.State %in% stateCodes$Contributor.State)
allBillsState <- arrange(allBillsState, bill, Contributor.State,
desc(Contribution.Amount), Contributor)
allBillsStateAgg <- allBillsState %>%
group_by(bill, Contributor.State) %>%
summarise(Contribution.Amount = sum(Contribution.Amount))
names(allBillsStateAgg)
names(allBillsState)
allBillsState <- allBills %>%
filter(!is.na(Contributor.State),
Contributor.State %in% stateCodes$Contributor.State)
allBillsState <- arrange(allBillsState, bill, Contributor.State,
desc(Contribution.Amount), Contributor)
names(allBillsState)
allBillsStateAgg <- allBillsState %>%
group_by(bill, Contributor.State) %>%
summarise(Contribution.Amount = sum(Contribution.Amount))
names(allBillsStateAgg)
